import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import InventoryScreen from './screens/InventoryScreen';
import AddItemScreen from './screens/AddItemScreen';

const Stack = createStackNavigator();

const App = () => {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Inventory">
        <Stack.Screen name="Inventory" component={InventoryScreen} />
        <Stack.Screen name="AddItem" component={AddItemScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
};

export default App;


import React, { useState } from 'react';
import { View, Text, FlatList, Button, StyleSheet } from 'react-native';

const InventoryScreen = ({ navigation }) => {
  const [inventory, setInventory] = useState([
    { id: '1', item: 'T-shirt', size: 'M', quantity: 10 },
    { id: '2', item: 'Jeans', size: '32', quantity: 5 },
    { id: '3', item: 'Jacket', size: 'L', quantity: 2 },
  ]);

  const renderItem = ({ item }) => (
    <View style={styles.itemContainer}>
      <Text style={styles.itemText}>{item.item} (Size: {item.size})</Text>
      <Text style={styles.quantityText}>Quantity: {item.quantity}</Text>
    </View>
  );

  return (
    <View style={styles.container}>
      <FlatList
        data={inventory}
        renderItem={renderItem}
        keyExtractor={item => item.id}
      />
      <Button
        title="Add New Item"
        onPress={() => navigation.navigate('AddItem', { setInventory })}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
  },
  itemContainer: {
    padding: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
  },
  itemText: {
    fontSize: 18,
  },
  quantityText: {
    fontSize: 16,
    color: '#666',
  },
});

export default InventoryScreen;


import React, { useState } from 'react';
import { View, TextInput, Button, StyleSheet } from 'react-native';

const AddItemScreen = ({ navigation, route }) => {
  const { setInventory } = route.params;
  const [item, setItem] = useState('');
  const [size, setSize] = useState('');
  const [quantity, setQuantity] = useState('');

  const handleAddItem = () => {
    setInventory(prevInventory => [
      ...prevInventory,
      { id: Date.now().toString(), item, size, quantity: parseInt(quantity) },
    ]);
    navigation.goBack();
  };

  return (
    <View style={styles.container}>
      <TextInput
        style={styles.input}
        placeholder="Item"
        value={item}
        onChangeText={setItem}
      />
      <TextInput
        style={styles.input}
        placeholder="Size"
        value={size}
        onChangeText={setSize}
      />
      <TextInput
        style={styles.input}
        placeholder="Quantity"
        value={quantity}
        onChangeText={setQuantity}
        keyboardType="numeric"
      />
      <Button title="Add Item" onPress={handleAddItem} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
  },
  input: {
    height: 40,
    borderColor: '#ccc',
    borderWidth: 1,
    marginBottom: 12,
    paddingHorizontal: 8,
  },
});

export default AddItemScreen;
